En nuevos PC instalar lo siguiente:
    -npm install -g @angular/cli@latest

Comando para crear proyectos Angular y arrancarlos:
    -ng new (no a√±adir Angular routing y CSS)
    -ng serve

Los componentes finalizan con la extension ts.

Debemos de tener una carpeta components que almacenara nuestros componentes.

Con el comando "ng g component components/nombredelcomponente" generariamos un componente ya con sus .ts, .html y .css y archivos necesarios, lo unico es que nos lo crea dentro de App, por lo que desde ahora nuestros componentes estaran alojados alli.


--Rutas en Angular-- Tocamos los archivos app.module.ts, app.component.html y app.routing.ts
-
1.-Creamos un documento app.routing.ts en la carpeta app.
2.-Importamos la siguiente sentencia:
    import { Routes, RouterModule } from "@angular/router";
    import { ModuleWithProviders } from "@angular/core";
3.-Importamos los componentes que vayamos a navegar.
4.-Creamos  appRoutes Routes.
-Para mas info mirar el archivo app.routing.js alojado en el proyecto rutasangular, que tiene ademas info para hacer ruta de errores 404 y mas.
-
PARA IMPORTAR app.routing.ts en app.module.ts:
    import { routing, appRoutingProviders } from './app.routing';
-
nota: dentro de @NgModule imports y providers debemos de escribir routing y appRoutingProviders
La etiqueta para llamar al router es <router-outlet></router-outlet>, debemos de ponerla en app.component.html
-
Para ver como se crea en menu o navbar o links, ver el archivo menu.component.html, la sentencia seria la siguiente:
-<a [routerLink]="['/laruta']">laruta</a>

PARA RECOGER PARAMETROS MEDIANTE RUTAS VER EL DOCUMENTO menucollatz.component.ts, donde se hace mediante la siguiente forma:
    // nota: debemos de importar ActivatedRoute para recoger parametros
    import { ActivatedRoute, Params } from '@angular/router';
    
    // nota: dentro de ngOnInit por ejemplo
    this._activeRoute.params.subscribe((params: Params) => {
      // nota: preguntamos si existe el parametro numero
      if (params['numero'] != null) {
        this.collatz = new Array<number>();
        // nota: asignamos la propiedad para la pagina, ademas siempre vienen como string
        this.numero = parseInt(params['numero']);

        var numero = this.numero;
        while (numero !== 1) {
          numero = numero % 2 === 0 ? numero / 2 : 3 * numero + 1;
          this.collatz.push(numero);
        }
      }
    });

Para poder usar BOOTSTRAP dentro de Angular debemos de importarto de la misma manera que en Vue.
  -En index.html poner en el head:
  <!-- bootstrap5 css link -->
    <link
      href="https://cdn.jsdelivr.net/npm/bootstrap@5.0.2/dist/css/bootstrap.min.css"
      rel="stylesheet"
      integrity="sha384-EVSTQN3/azprG1Anm3QDgpJLIm9Nao0Yz1ztcQTwFspd3yD65VohhpuuCOmLASjC"
      crossorigin="anonymous"
    />
  -En index.html poner al final de body:
  <!-- jQuery link -->
    <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js"></script>
  <!-- bootstrap5 bundle links -->
    <script
      src="https://cdn.jsdelivr.net/npm/bootstrap@5.0.2/dist/js/bootstrap.bundle.min.js"
      integrity="sha384-MrcW6ZMFYlzcLA8Nl+NtUVF0sA7MsXsP1UyJoMp4YLEuNSfAP+JcXn/tWtIaxVXM"
      crossorigin="anonymous"
    ></script>